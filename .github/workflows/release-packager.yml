# This workflow builds and releases a SIF container on every push to the main branch.
name: Build and Release SIF Container (Nightly)

on:
  push:
    branches:
      - 'main' # Trigger on every push to the 'main' branch

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Required to create/update releases
      packages: write # Required to push to GitHub Container Registry

    steps:
      # 1. Get the source code
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Get the short commit SHA to use as the version for our artifacts
      - name: Get commit SHA for versioning
        id: get_version
        run: echo "VERSION=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      # 3. Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 4. Log in to the GitHub Container Registry (GHCR)
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 5. Build and push the Docker image to GHCR, tagged with the commit SHA
      - name: Build and push Docker image
        id: build_and_push_docker
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          # The image will be tagged with the unique commit SHA, e.g., ghcr.io/your-org/your-repo:a1b2c3d
          tags: ghcr.io/${{ github.repository }}:${{ steps.get_version.outputs.VERSION }}
          labels: |
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.version=${{ steps.get_version.outputs.VERSION }}

      # 6. Install Apptainer
      - name: Install Apptainer
        uses: apptainer/setup-apptainer@main

      # 7. Build the SIF container from the newly pushed Docker image
      - name: Build SIF from Docker image
        env:
          APPTAINER_DOCKER_USERNAME: ${{ github.actor }}
          APPTAINER_DOCKER_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
          SIF_FILENAME: ${{ github.event.repository.name }}_${{ steps.get_version.outputs.VERSION }}.sif
          DOCKER_IMAGE_URI: docker://ghcr.io/${{ github.repository }}:${{ steps.get_version.outputs.VERSION }}
        run: |
          echo "Building SIF file: $SIF_FILENAME"
          apptainer build "$SIF_FILENAME" "$DOCKER_IMAGE_URI"
          echo "SIF_FILE_PATH=$SIF_FILENAME" >> $GITHUB_ENV

      # 8. Create or update a "Nightly Build" pre-release and upload the new SIF file
      - name: Create or Update Nightly Pre-Release
        uses: softprops/action-gh-release@v2
        with:
          # This will find the release associated with the 'nightly' tag, create it if it doesn't exist,
          # and update it on every subsequent run.
          tag_name: "nightly-build"
          name: "Nightly Build"
          body: |
            This pre-release contains the latest development build from the `main` branch.
            
            **Last Updated:** $(date -u)
            **Commit:** `${{ github.sha }}`
            
            **Container Images:**
            - **SIF:** `${{ env.SIF_FILE_PATH }}` (attached below)
            - **Docker:** `ghcr.io/${{ github.repository }}:${{ steps.get_version.outputs.VERSION }}`
          prerelease: true
          # The 'files' option will overwrite any existing assets with the same name,
          # ensuring the release always points to the latest SIF file.
          files: ${{ env.SIF_FILE_PATH }}
