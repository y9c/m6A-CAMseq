#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
# Copyright Â© 2024 Ye Chang yech1990@gmail.com
# Distributed under terms of the GNU license.
#
# Created: 2024-01-01 22:48

"""
validate input YAML file before starting the pipeline
"""

import sys

import yaml
from jsonschema import validate

filename = sys.argv[1]
schema = {
    "type": "object",
    "properties": {
        "samples": {
            "type": "object",
            "patternProperties": {
                "^.*$": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "patternProperties": {
                                    "R1": {"type": "string"},
                                    "R2": {"type": "string"},
                                },
                                "required": ["R1"],
                            },
                        },
                        "group": {
                            "oneOf": [
                                {"type": "string"},
                                {"type": "array", "items": {"type": "string"}},
                            ]
                        },
                        "treated": {"type": "boolean"},
                        "barcode": {"type": "string"},
                    },
                    "required": ["data"],
                }
            },
        },
    },
}

try:
    yml = yaml.load(open(filename, "r").read(), yaml.SafeLoader)
    try:
        validate(instance=yml, schema=schema)
    except Exception as e:
        print(f"Error validating YAML file when {e.path}\n\n    {e.message}")
        sys.exit(1)
except yaml.YAMLError as exc:
    print(f"Error while parsing {filename} file:")
    if hasattr(exc, "problem_mark"):
        if exc.context != None:
            print(".............")
            print(
                str(exc.problem_mark)
                + "\n  "
                + str(exc.problem)
                + " "
                + str(exc.context)
            )
        else:
            print(str(exc.problem_mark) + "\n  " + str(exc.problem))
        print("..............\nPlease correct data and retry.")
    else:
        print("Something went wrong while parsing yaml file")
    sys.exit(1)
